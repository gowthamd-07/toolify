apiVersion: apps/v1
kind: Deployment
metadata:
  name: toolify-{{ .Values.image.version }}
  namespace: application
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: toolify
  template:
    metadata:
      labels:
        app: toolify
        version: '{{ .Values.image.version }}'
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-type
                operator: In
                values:
                - common
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: toolify
        securityContext:
          privileged: false
        image: 381491872394.dkr.ecr.ap-south-1.amazonaws.com/toolify:{{ .Values.image.version }}
        env: 
        - name: DATABASE_NAME
          value: "toolify"
        - name: DATABASE_USER
          value: "postgres"
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DATABASE_PASSWORD
              name: toolify
        - name: DATABASE_HOST
          value: "toolify.cnyqc4mi6ifn.ap-south-1.rds.amazonaws.com"
        - name: DATABASE_PORT
          value: "5432"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: SECRET_KEY
              name: toolify
        - name: DEBUG
          value: "False"
        ports:
        - containerPort: 8000
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health-check
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health-check
            port: 8080
            scheme: HTTP
        resources:
          requests:
            cpu: 250m
            memory: 250Mi
          limits:
            cpu: 500m
            memory: 500Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1337
      tolerations:
      - effect: NoSchedule
        key: service-type
        operator: Equal
        value: common